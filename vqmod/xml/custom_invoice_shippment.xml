<?xml version="1.0" encoding="UTF-8"?>
<modification>
    <id>Custom Generate Invoice and Shippment</id>
    <version>v2.0</version>
    <author>Agile Inofways</author>
        <file name="admin/controller/sale/order.php">
        <operation>
            <search position="before"><![CDATA[class ControllerSaleOrder extends Controller {]]></search>
            <add><![CDATA[
                require_once DIR_SYSTEM . 'library/spout/src/Spout/Autoloader/autoload.php';
                require_once DIR_SYSTEM . 'library/dompdf/dompdf/autoload.inc.php';
                use Box\Spout\Common\Type;
                use Box\Spout\Reader\ReaderFactory;
                use Dompdf\Dompdf;
               ]]></add>
        </operation> 
        </file>
        <file name="admin/controller/sale/order.php">
        <operation>
            <search position="after"><![CDATA[$data['title'] = $this->language->get('text_shipping');]]></search>
            <add><![CDATA[
               $data['token'] = $this->session->data['token'];
               $data['order_id_shipp'] = $this->request->get['order_id'];
               ]]></add>
        </operation>   
        <operation>
            <search position="before"><![CDATA[public function shipping() {]]></search>
            <add><![CDATA[

                public function getShippedOrders() {

                    $this->document->setTitle('Shipped Order');

                    $this->load->model('sale/order');

                    $this->load->language('sale/order');

                    if (isset($this->request->get['filter_order_id'])) {
                        $filter_order_id = $this->request->get['filter_order_id'];
                    } else {
                        $filter_order_id = null;
                    }

                    if (isset($this->request->get['filter_customer'])) {
                        $filter_customer = $this->request->get['filter_customer'];
                    } else {
                        $filter_customer = null;
                    }

                    if (isset($this->request->get['filter_order_status'])) {
                        $filter_order_status = $this->request->get['filter_order_status'];
                    } else {
                        $filter_order_status = null;
                    }

                    if (isset($this->request->get['filter_total'])) {
                        $filter_total = $this->request->get['filter_total'];
                    } else {
                        $filter_total = null;
                    }

                    if (isset($this->request->get['filter_date_added'])) {
                        $filter_date_added = $this->request->get['filter_date_added'];
                    } else {
                        $filter_date_added = null;
                    }

                    if (isset($this->request->get['filter_date_modified'])) {
                        $filter_date_modified = $this->request->get['filter_date_modified'];
                    } else {
                        $filter_date_modified = null;
                    }

                    if (isset($this->request->get['sort'])) {
                        $sort = $this->request->get['sort'];
                    } else {
                        $sort = 'o.order_id';
                    }

                    if (isset($this->request->get['order'])) {
                        $order = $this->request->get['order'];
                    } else {
                        $order = 'DESC';
                    }

                    if (isset($this->request->get['page'])) {
                        $page = $this->request->get['page'];
                    } else {
                        $page = 1;
                    }

                    $url = '';

                    if (isset($this->request->get['filter_order_id'])) {
                        $url .= '&filter_order_id=' . $this->request->get['filter_order_id'];
                    }

                    if (isset($this->request->get['filter_customer'])) {
                        $url .= '&filter_customer=' . urlencode(html_entity_decode($this->request->get['filter_customer'], ENT_QUOTES, 'UTF-8'));
                    }

                    if (isset($this->request->get['filter_order_status'])) {
                        $url .= '&filter_order_status=' . $this->request->get['filter_order_status'];
                    }

                    if (isset($this->request->get['filter_total'])) {
                        $url .= '&filter_total=' . $this->request->get['filter_total'];
                    }

                    if (isset($this->request->get['filter_date_added'])) {
                        $url .= '&filter_date_added=' . $this->request->get['filter_date_added'];
                    }

                    if (isset($this->request->get['filter_date_modified'])) {
                        $url .= '&filter_date_modified=' . $this->request->get['filter_date_modified'];
                    }

                    if (isset($this->request->get['sort'])) {
                        $url .= '&sort=' . $this->request->get['sort'];
                    }

                    if (isset($this->request->get['order'])) {
                        $url .= '&order=' . $this->request->get['order'];
                    }

                    if (isset($this->request->get['page'])) {
                        $url .= '&page=' . $this->request->get['page'];
                    }

                    $data['breadcrumbs'] = array();

                    $data['breadcrumbs'][] = array(
                        'text' => $this->language->get('text_home'),
                        'href' => $this->url->link('common/dashboard', 'token=' . $this->session->data['token'], 'SSL')
                    );

                    $data['breadcrumbs'][] = array(
                        'text' => 'Shipped Orders',
                        'href' => $this->url->link('sale/order/getShippedOrders', 'token=' . $this->session->data['token'] . $url, 'SSL')
                    );


                    $data['orders'] = array();

                    $filter_data = array(
                        'filter_order_id'      => $filter_order_id,
                        'filter_customer'      => $filter_customer,
                        'filter_order_status'  => $filter_order_status,
                        'filter_total'         => $filter_total,
                        'filter_date_added'    => $filter_date_added,
                        'filter_date_modified' => $filter_date_modified,
                        'sort'                 => $sort,
                        'order'                => $order,
                        'start'                => ($page - 1) * $this->config->get('config_limit_admin'),
                        'limit'                => $this->config->get('config_limit_admin')
                    );

                    $order_total = $this->model_sale_order->getTotalShippedOrders($filter_data);

                    $results = $this->model_sale_order->getSippedOrders($filter_data);

                    foreach ($results as $result) {
                        $data['orders'][] = array(
                            'order_id'      => $result['order_id'],
                            'customer'      => $result['customer'],
                            'status'        => $result['status'],
                            'total'         => $this->currency->format($result['total'], $result['currency_code'], $result['currency_value']),
                            'date_added'    => date($this->language->get('date_format_short'), strtotime($result['date_added'])),
                            'date_modified' => date($this->language->get('date_format_short'), strtotime($result['date_modified'])),
                            'shipping_code' => $result['shipping_code'],
                            'downloadfile'          => $this->url->link('sale/order/downloadfile', 'token=' . $this->session->data['token'] . '&order_id=' . $result['order_id'] . $url, 'SSL'),
                        );
                    }

                    $data['heading_title'] = 'Shipped Orders';

                    $data['text_list'] = $this->language->get('text_list');
                    $data['text_no_results'] = $this->language->get('text_no_results');
                    $data['text_confirm'] = $this->language->get('text_confirm');
                    $data['text_missing'] = $this->language->get('text_missing');
                    $data['text_loading'] = $this->language->get('text_loading');

                    $data['column_order_id'] = $this->language->get('column_order_id');
                    $data['column_customer'] = $this->language->get('column_customer');
                    $data['column_status'] = $this->language->get('column_status');
                    $data['column_total'] = $this->language->get('column_total');
                    $data['column_date_added'] = $this->language->get('column_date_added');
                    $data['column_date_modified'] = $this->language->get('column_date_modified');
                    $data['column_action'] = $this->language->get('column_action');

                    $data['entry_return_id'] = $this->language->get('entry_return_id');
                    $data['entry_order_id'] = $this->language->get('entry_order_id');
                    $data['entry_customer'] = $this->language->get('entry_customer');
                    $data['entry_order_status'] = $this->language->get('entry_order_status');
                    $data['entry_total'] = $this->language->get('entry_total');
                    $data['entry_date_added'] = $this->language->get('entry_date_added');
                    $data['entry_date_modified'] = $this->language->get('entry_date_modified');

                    $data['button_invoice_print'] = $this->language->get('button_invoice_print');
                    $data['button_shipping_print'] = $this->language->get('button_shipping_print');
                    $data['button_add'] = $this->language->get('button_add');
                    $data['button_edit'] = $this->language->get('button_edit');
                    $data['button_delete'] = $this->language->get('button_delete');
                    $data['button_filter'] = $this->language->get('button_filter');
                    $data['button_view'] = $this->language->get('button_view');
                    $data['button_ip_add'] = $this->language->get('button_ip_add');

                    $data['token'] = $this->session->data['token'];

                    if (isset($this->request->post['selected'])) {
                        $data['selected'] = (array)$this->request->post['selected'];
                    } else {
                        $data['selected'] = array();
                    }

                    $url = '';

                    if (isset($this->request->get['filter_order_id'])) {
                        $url .= '&filter_order_id=' . $this->request->get['filter_order_id'];
                    }

                    if (isset($this->request->get['filter_customer'])) {
                        $url .= '&filter_customer=' . urlencode(html_entity_decode($this->request->get['filter_customer'], ENT_QUOTES, 'UTF-8'));
                    }

                    if (isset($this->request->get['filter_order_status'])) {
                        $url .= '&filter_order_status=' . $this->request->get['filter_order_status'];
                    }

                    if (isset($this->request->get['filter_total'])) {
                        $url .= '&filter_total=' . $this->request->get['filter_total'];
                    }

                    if (isset($this->request->get['filter_date_added'])) {
                        $url .= '&filter_date_added=' . $this->request->get['filter_date_added'];
                    }

                    if (isset($this->request->get['filter_date_modified'])) {
                        $url .= '&filter_date_modified=' . $this->request->get['filter_date_modified'];
                    }

                    if ($order == 'ASC') {
                        $url .= '&order=DESC';
                    } else {
                        $url .= '&order=ASC';
                    }

                    if (isset($this->request->get['page'])) {
                        $url .= '&page=' . $this->request->get['page'];
                    }

                    $data['sort_order'] = $this->url->link('sale/order', 'token=' . $this->session->data['token'] . '&sort=o.order_id' . $url, 'SSL');
                    $data['sort_customer'] = $this->url->link('sale/order', 'token=' . $this->session->data['token'] . '&sort=customer' . $url, 'SSL');
                    $data['sort_status'] = $this->url->link('sale/order', 'token=' . $this->session->data['token'] . '&sort=status' . $url, 'SSL');
                    $data['sort_total'] = $this->url->link('sale/order', 'token=' . $this->session->data['token'] . '&sort=o.total' . $url, 'SSL');
                    $data['sort_date_added'] = $this->url->link('sale/order', 'token=' . $this->session->data['token'] . '&sort=o.date_added' . $url, 'SSL');
                    $data['sort_date_modified'] = $this->url->link('sale/order', 'token=' . $this->session->data['token'] . '&sort=o.date_modified' . $url, 'SSL');

                    $url = '';

                    if (isset($this->request->get['filter_order_id'])) {
                        $url .= '&filter_order_id=' . $this->request->get['filter_order_id'];
                    }

                    if (isset($this->request->get['filter_customer'])) {
                        $url .= '&filter_customer=' . urlencode(html_entity_decode($this->request->get['filter_customer'], ENT_QUOTES, 'UTF-8'));
                    }

                    if (isset($this->request->get['filter_order_status'])) {
                        $url .= '&filter_order_status=' . $this->request->get['filter_order_status'];
                    }

                    if (isset($this->request->get['filter_total'])) {
                        $url .= '&filter_total=' . $this->request->get['filter_total'];
                    }

                    if (isset($this->request->get['filter_date_added'])) {
                        $url .= '&filter_date_added=' . $this->request->get['filter_date_added'];
                    }

                    if (isset($this->request->get['filter_date_modified'])) {
                        $url .= '&filter_date_modified=' . $this->request->get['filter_date_modified'];
                    }

                    if (isset($this->request->get['sort'])) {
                        $url .= '&sort=' . $this->request->get['sort'];
                    }

                    if (isset($this->request->get['order'])) {
                        $url .= '&order=' . $this->request->get['order'];
                    }

                    $pagination = new Pagination();
                    $pagination->total = $order_total;
                    $pagination->page = $page;
                    $pagination->limit = $this->config->get('config_limit_admin');
                    $pagination->url = $this->url->link('sale/order', 'token=' . $this->session->data['token'] . $url . '&page={page}', 'SSL');

                    $data['pagination'] = $pagination->render();

                    $data['results'] = sprintf($this->language->get('text_pagination'), ($order_total) ? (($page - 1) * $this->config->get('config_limit_admin')) + 1 : 0, ((($page - 1) * $this->config->get('config_limit_admin')) > ($order_total - $this->config->get('config_limit_admin'))) ? $order_total : ((($page - 1) * $this->config->get('config_limit_admin')) + $this->config->get('config_limit_admin')), $order_total, ceil($order_total / $this->config->get('config_limit_admin')));

                    $data['filter_order_id'] = $filter_order_id;
                    $data['filter_customer'] = $filter_customer;
                    $data['filter_order_status'] = $filter_order_status;
                    $data['filter_total'] = $filter_total;
                    $data['filter_date_added'] = $filter_date_added;
                    $data['filter_date_modified'] = $filter_date_modified;

                    $this->load->model('localisation/order_status');

                    $data['order_statuses'] = $this->model_localisation_order_status->getOrderStatuses();

                    $data['sort'] = $sort;
                    $data['order'] = $order;

                    $data['store'] = HTTPS_CATALOG;

                    // API login
                    $this->load->model('user/api');

                    $api_info = $this->model_user_api->getApi($this->config->get('config_api_id'));

                    if ($api_info) {
                        $data['api_id'] = $api_info['api_id'];
                        $data['api_key'] = $api_info['key'];
                        $data['api_ip'] = $this->request->server['REMOTE_ADDR'];
                    } else {
                        $data['api_id'] = '';
                        $data['api_key'] = '';
                        $data['api_ip'] = '';
                    }

                    $data['header'] = $this->load->controller('common/header');
                    $data['column_left'] = $this->load->controller('common/column_left');
                    $data['footer'] = $this->load->controller('common/footer');

                    $this->response->setOutput($this->load->view('sale/shipped_order_list.tpl', $data));
                }


                public function downloadfile() {


                    $order_id = $this->request->get['order_id'];
               
                    $inputFileName = DIR_SYSTEM . 'shipped/order'.'-'.$order_id.'.pdf';
                
                    header('Content-Description: File Transfer');
                    header('Content-Type: application/octet-stream');
                    header('Content-Disposition: attachment; filename="'.basename($inputFileName).'"');
                    header('Expires: 0');
                    header('Cache-Control: must-revalidate');
                    header('Pragma: public');
                    header('Content-Length: ' . filesize($inputFileName));
                    flush(); // Flush system output buffer
                    readfile($inputFileName);
                    exit;
                
                 }
                


                public function gpdf() {
                    $this->load->model('sale/order');
                    $this->load->model('setting/setting');
                    $this->load->model('catalog/product');

                    $order_id = $this->request->get['order_id'];

                    $this->model_sale_order->changeShipped($order_id);

                    $this->model_sale_order->addOrderHistory($order_id, 3);

                    $this->load->language('sale/order');

                    $title = $this->language->get('text_shipping');

                    if ($this->request->server['HTTPS']) {
                        $base = HTTPS_SERVER;
                    } else {
                        $base = HTTP_SERVER;
                    }

                    $dompdf = new Dompdf();
                    $token = $this->session->data['token'];
                    $order_id_shipp = $this->request->get['order_id'];

                    $direction = $this->language->get('direction');
                    $lang = $this->language->get('code');

                    $text_shipping = $this->language->get('text_shipping');
                    $text_picklist = $this->language->get('text_picklist');
                    $text_order_detail = $this->language->get('text_order_detail');
                    $text_order_id = $this->language->get('text_order_id');
                    $text_invoice_no = $this->language->get('text_invoice_no');
                    $text_invoice_date = $this->language->get('text_invoice_date');
                    $text_date_added = $this->language->get('text_date_added');
                    $text_telephone = $this->language->get('text_telephone');
                    $text_fax = $this->language->get('text_fax');
                    $text_email = $this->language->get('text_email');
                    $text_website = $this->language->get('text_website');
                    $text_contact = $this->language->get('text_contact');
                    $text_payment_address = $this->language->get('text_payment_address');
                    $text_shipping_method = $this->language->get('text_shipping_method');
                    $text_sku = $this->language->get('text_sku');
                    $text_upc = $this->language->get('text_upc');
                    $text_ean = $this->language->get('text_ean');
                    $text_jan = $this->language->get('text_jan');
                    $text_isbn = $this->language->get('text_isbn');
                    $text_mpn = $this->language->get('text_mpn');
                    $text_comment = $this->language->get('text_comment');

                    $column_location = $this->language->get('column_location');
                    $column_reference = $this->language->get('column_reference');
                    $column_product = $this->language->get('column_product');
                    $column_weight = $this->language->get('column_weight');
                    $column_model = $this->language->get('column_model');
                    $column_quantity = $this->language->get('column_quantity');

                    $this->load->model('sale/order');

                    $this->load->model('catalog/product');

                    $this->load->model('setting/setting');

                    $data['orders'] = array();

                    $orders = array();

                    if (isset($this->request->post['selected'])) {
                        $orders = $this->request->post['selected'];
                    } elseif (isset($this->request->get['order_id'])) {
                        $orders[] = $this->request->get['order_id'];
                    }

                    foreach ($orders as $order_id) {
                        $order_info = $this->model_sale_order->getOrder($order_id);

                        // Make sure there is a shipping method
                        if ($order_info && $order_info['shipping_code']) {
                            $store_info = $this->model_setting_setting->getSetting('config', $order_info['store_id']);

                            if ($store_info) {
                                $store_address = $store_info['config_address'];
                                $store_email = $store_info['config_email'];
                                $store_telephone = $store_info['config_telephone'];
                                $store_fax = $store_info['config_fax'];
                            } else {
                                $store_address = $this->config->get('config_address');
                                $store_email = $this->config->get('config_email');
                                $store_telephone = $this->config->get('config_telephone');
                                $store_fax = $this->config->get('config_fax');
                            }

                            if ($order_info['invoice_no']) {
                                $invoice_no = $order_info['invoice_prefix'] . $order_info['invoice_no'];
                            } else {
                                $invoice_no = '';
                            }

                            if ($order_info['shipping_address_format']) {
                                $format = $order_info['shipping_address_format'];
                            } else {
                                $format = '{firstname} {lastname}' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city} {postcode}' . "\n" . '{zone}' . "\n" . '{country}';
                            }

                            $find = array(
                                '{firstname}',
                                '{lastname}',
                                '{company}',
                                '{address_1}',
                                '{address_2}',
                                '{city}',
                                '{postcode}',
                                '{zone}',
                                '{zone_code}',
                                '{country}'
                            );

                            $replace = array(
                                'firstname' => $order_info['shipping_firstname'],
                                'lastname'  => $order_info['shipping_lastname'],
                                'company'   => $order_info['shipping_company'],
                                'address_1' => $order_info['shipping_address_1'],
                                'address_2' => $order_info['shipping_address_2'],
                                'city'      => $order_info['shipping_city'],
                                'postcode'  => $order_info['shipping_postcode'],
                                'zone'      => $order_info['shipping_zone'],
                                'zone_code' => $order_info['shipping_zone_code'],
                                'country'   => $order_info['shipping_country']
                            );

                            $shipping_address = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));

                            $this->load->model('tool/upload');

                            $product_data = array();

                            $products = $this->model_sale_order->getOrderProducts($order_id);

                            foreach ($products as $product) {
                                $option_weight = '';

                                $product_info = $this->model_catalog_product->getProduct($product['product_id']);

                                if ($product_info) {
                                    $option_data = array();

                                    $options = $this->model_sale_order->getOrderOptions($order_id, $product['order_product_id']);

                                    foreach ($options as $option) {
                                        $option_value_info = $this->model_catalog_product->getProductOptionValue($order_id, $product['order_product_id']);

                                        if ($option['type'] != 'file') {
                                            $value = $option['value'];
                                        } else {
                                            $upload_info = $this->model_tool_upload->getUploadByCode($option['value']);

                                            if ($upload_info) {
                                                $value = $upload_info['name'];
                                            } else {
                                                $value = '';
                                            }
                                        }

                                        $option_data[] = array(
                                            'name'  => $option['name'],
                                            'value' => $value
                                        );

                                        $product_option_value_info = $this->model_catalog_product->getProductOptionValue($product['product_id'], $option['product_option_value_id']);

                                        if ($product_option_value_info) {
                                            if ($product_option_value_info['weight_prefix'] == '+') {
                                                $option_weight += $product_option_value_info['weight'];
                                            } elseif ($product_option_value_info['weight_prefix'] == '-') {
                                                $option_weight -= $product_option_value_info['weight'];
                                            }
                                        }
                                    }

                                    $product_data[] = array(
                                        'name'     => $product_info['name'],
                                        'model'    => $product_info['model'],
                                        'option'   => $option_data,
                                        'quantity' => $product['quantity'],
                                        'location' => $product_info['location'],
                                        'sku'      => $product_info['sku'],
                                        'upc'      => $product_info['upc'],
                                        'ean'      => $product_info['ean'],
                                        'jan'      => $product_info['jan'],
                                        'isbn'     => $product_info['isbn'],
                                        'mpn'      => $product_info['mpn'],
                                        'weight'   => $this->weight->format(($product_info['weight'] + $option_weight) * $product['quantity'], $product_info['weight_class_id'], $this->language->get('decimal_point'), $this->language->get('thousand_point'))
                                    );
                                }
                            }

                            $shippdata[] = array(
                                'order_id'         => $order_id,
                                'invoice_no'       => $invoice_no,
                                'date_added'       => date($this->language->get('date_format_short'), strtotime($order_info['date_added'])),
                                'store_name'       => $order_info['store_name'],
                                'store_url'        => rtrim($order_info['store_url'], '/'),
                                'store_address'    => nl2br($store_address),
                                'store_email'      => $store_email,
                                'store_telephone'  => $store_telephone,
                                'store_fax'        => $store_fax,
                                'email'            => $order_info['email'],
                                'telephone'        => $order_info['telephone'],
                                'shipping_address' => $shipping_address,
                                'shipping_method'  => $order_info['shipping_method'],
                                'product'          => $product_data,
                                'comment'          => nl2br($order_info['comment'])
                            );
                        }
                    }


                    $html ='
                        <html>
                        <head>
                        <meta charset="UTF-8" />
                        <title>'.$title . '</title>
                        <base href='. $base .'/>
                        <link href="view/javascript/bootstrap/css/bootstrap.css" rel="stylesheet" media="all" />
                        <script type="text/javascript" src="view/javascript/jquery/jquery-2.1.1.min.js"></script>
                        <script type="text/javascript" src="view/javascript/bootstrap/js/bootstrap.min.js"></script>
                        <link href="view/javascript/font-awesome/css/font-awesome.min.css" type="text/css" rel="stylesheet" />
                        <link type="text/css" href="view/stylesheet/stylesheet.css" rel="stylesheet" media="all" />
                        </head>
                        <body>
                        <div class="container">';
                          foreach ($shippdata as $order) {
                          $html .='<div>
                            <h1>'.$text_picklist.'#'. $order['order_id'].'</h1>
                            <table class="table table-bordered">
                              <thead>
                                <tr>
                                  <td colspan="2">'.$text_order_detail.'</td>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td><address>
                                    <strong>'. $order['store_name'].'</strong><br />
                                    '. $order['store_address'].'
                                    </address>
                                    <b>'. $text_telephone.'</b>' . $order['store_telephone'] .'<br />';
                                    if ($order['store_fax']) {
                                    $html .'<b>'. $text_fax .'</b>' . $order['store_fax'] . '<br />';
                                     } 
                                    $html .'<b>'.$text_email.'</b>'. $order['store_email'] . '<br />
                                    <b>'.$text_website.'</b><a href="'. $order['store_url'] .'>' . $order['store_url'].'</a></td>
                                     <td style="width: 50%;"><b>'. $text_date_added .'</b>'. $order['date_added'] . '<br />';
                                     if ($order['invoice_no']) {
                                    $html .='<b>'. $text_invoice_no .'</b>'. $order['invoice_no'].'<br />';
                                     } 
                                    $html .='<b>'. $text_order_id .'</b>'. $order['order_id'] . '<br />';
                                    if ($order['shipping_method']) {
                                    $html .='<b>'. $text_shipping_method.'</b>' . $order['shipping_method'] . '<br />';
                                    } 
                                $html .='</td>
                                </tr>
                              </tbody>
                            </table>
                            <table class="table table-bordered">
                              <thead>
                                <tr>
                                  <td style="width: 50%;"><b><?php echo $text_payment_address; ?></b></td>
                                  <td style="width: 50%;"><b><?php echo $text_contact; ?></b></td>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td>'.$order['shipping_address'].'</td>
                                  <td>'.$order['email'].'<br/>
                                  '. $order['telephone'].'</td>
                                </tr>
                              </tbody>
                            </table>
                            <table class="table table-bordered">
                              <thead>
                                <tr>
                                  <td><b>'.$column_location.'</b></td>
                                  <td><b>'. $column_reference.'</b></td>
                                  <td><b>'. $column_product.'</b></td>
                                  <td><b>'. $column_weight .'</b></td>
                                  <td><b>'. $column_model .'</b></td>
                                  <td class="text-right"><b>'.$column_quantity.'</b></td>
                                </tr>
                              </thead>
                              <tbody>';
                                 foreach ($order['product'] as $product) { 
                                $html .='<tr>
                                  <td>'. $product['location'].'</td>
                                  <td>';
                                    if($product['sku']) {
                                     $text_sku . $product['sku'] . $html .='<br />'; 
                                     } 
                                     if ($product['upc']) {
                                     $text_upc . $product['upc'] . $html .='<br />'; 
                                     } 
                                     if ($product['ean']) { 
                                     $text_ean .  $product['ean'] . $html .='<br />'; 
                                    } 
                                    if ($product['jan']) {
                                    $text_jan .$product['jan'] . $html .='<br />'; 

                                    }
                                    if ($product['isbn']) {
                                    $text_isbn . $product['isbn']. $html .='<br />'; 
                            
                                    }
                                    if ($product['mpn']) { 
                                    $text_mpn . $product['mpn']. $html .='<br />';  
                                     }
                                   $html .='</td>
                                  <td>'. $product['name'];
                                    foreach ($product['option'] as $option){
                                    $html .='<br />
                                    &nbsp;<small> '. $option['name']. $option['value'] .'</small>';
                                     }
                                $html .='</td>
                                  <td>'. $product['weight'] .'</td>
                                  <td>'. $product['model'] .'</td>
                                  <td class="text-right">'. $product['quantity'] .'</td>
                                </tr>';
                                }
                              $html .='</tbody>
                            </table>';
                             if ($order['comment']) {
                            $html .='<table class="table table-bordered">
                              <thead>
                                <tr>
                                  <td><b>'. $text_comment .'</b></td>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td>'.$order['comment'].'</td>
                                </tr>
                              </tbody>
                            </table>';
                             } 
                          $html .='</div>';
                           }
                        $html .='</div></body></html>';


                    $inputFileName = DIR_SYSTEM . 'shipped/order'.'-'.$order_id.'.pdf';
                    $dompdf->loadHtml($html);
                    /* Render the HTML as PDF */
                    $dompdf->render();
                    /* Output the generated PDF to Browser */
                    // $dompdf->stream();
                    $html = $dompdf->output();
                    file_put_contents($inputFileName,$html);

                }    
               
            ]]></add>
        </operation>
       </file>
       <file name="admin/model/sale/order.php">
        <operation>
            <search position="before"><![CDATA[public function getTotalOrdersByStoreId($store_id) {]]></search>
            <add><![CDATA[
            public function getSippedOrders($data = array()) {
                        $sql = "SELECT o.order_id, CONCAT(o.firstname, ' ', o.lastname) AS customer, (SELECT os.name FROM " . DB_PREFIX . "order_status os WHERE os.order_status_id = o.order_status_id AND os.language_id = '" . (int)$this->config->get('config_language_id') . "') AS status, o.shipping_code, o.total, o.currency_code, o.currency_value, o.date_added, o.date_modified FROM `" . DB_PREFIX . "order` o";

                        if (isset($data['filter_order_status'])) {
                            $implode = array();

                            $order_statuses = explode(',', $data['filter_order_status']);

                            foreach ($order_statuses as $order_status_id) {
                                $implode[] = "o.order_status_id = '" . (int)$order_status_id . "'";
                            }

                            if ($implode) {
                                $sql .= " WHERE (" . implode(" OR ", $implode) . ")";
                            }
                        } else {
                            $sql .= " WHERE o.order_status_id = '3' AND pdf_status = '2'";
                        }

                        if (!empty($data['filter_order_id'])) {
                            $sql .= " AND o.order_id = '" . (int)$data['filter_order_id'] . "'";
                        }

                        if (!empty($data['filter_customer'])) {
                            $sql .= " AND CONCAT(o.firstname, ' ', o.lastname) LIKE '%" . $this->db->escape($data['filter_customer']) . "%'";
                        }

                        if (!empty($data['filter_date_added'])) {
                            $sql .= " AND DATE(o.date_added) = DATE('" . $this->db->escape($data['filter_date_added']) . "')";
                        }

                        if (!empty($data['filter_date_modified'])) {
                            $sql .= " AND DATE(o.date_modified) = DATE('" . $this->db->escape($data['filter_date_modified']) . "')";
                        }

                        if (!empty($data['filter_total'])) {
                            $sql .= " AND o.total = '" . (float)$data['filter_total'] . "'";
                        }

                        $sort_data = array(
                            'o.order_id',
                            'customer',
                            'status',
                            'o.date_added',
                            'o.date_modified',
                            'o.total'
                        );

                        if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
                            $sql .= " ORDER BY " . $data['sort'];
                        } else {
                            $sql .= " ORDER BY o.order_id";
                        }

                        if (isset($data['order']) && ($data['order'] == 'DESC')) {
                            $sql .= " DESC";
                        } else {
                            $sql .= " ASC";
                        }

                        if (isset($data['start']) || isset($data['limit'])) {
                            if ($data['start'] < 0) {
                                $data['start'] = 0;
                            }

                            if ($data['limit'] < 1) {
                                $data['limit'] = 20;
                            }

                            $sql .= " LIMIT " . (int)$data['start'] . "," . (int)$data['limit'];
                        }

                        $query = $this->db->query($sql);

                        return $query->rows;
        }

        public function getTotalShippedOrders($data = array()) {
                        $sql = "SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "order`";

                        if (isset($data['filter_order_status'])) {
                            $implode = array();

                            $order_statuses = explode(',', $data['filter_order_status']);

                            foreach ($order_statuses as $order_status_id) {
                                $implode[] = "order_status_id = '" . (int)$order_status_id . "'";
                            }

                        if ($implode) {
                                $sql .= " WHERE (" . implode(" OR ", $implode) . ")";
                        }
                        } else {
                            $sql .= " WHERE order_status_id = '3' AND pdf_status = '2'";
                        }

                        if (!empty($data['filter_order_id'])) {
                            $sql .= " AND order_id = '" . (int)$data['filter_order_id'] . "'";
                        }

                        if (!empty($data['filter_customer'])) {
                            $sql .= " AND CONCAT(firstname, ' ', lastname) LIKE '%" . $this->db->escape($data['filter_customer']) . "%'";
                        }

                        if (!empty($data['filter_date_added'])) {
                            $sql .= " AND DATE(date_added) = DATE('" . $this->db->escape($data['filter_date_added']) . "')";
                        }

                        if (!empty($data['filter_date_modified'])) {
                            $sql .= " AND DATE(date_modified) = DATE('" . $this->db->escape($data['filter_date_modified']) . "')";
                        }

                        if (!empty($data['filter_total'])) {
                            $sql .= " AND total = '" . (float)$data['filter_total'] . "'";
                        }

                        $query = $this->db->query($sql);

                        return $query->row['total'];
            }  

            public function addOrderHistory($order_id, $order_status_id, $comment = '', $notify = false, $override = false) {
                $event_data = array(
                    'order_id'        => $order_id,
                    'order_status_id' => $order_status_id,
                    'comment'         => $comment,
                    'notify'          => $notify
                );

                $this->event->trigger('pre.order.history.add', $event_data);


                $this->db->query("INSERT INTO " . DB_PREFIX . "order_history SET order_id = '" . (int)$order_id . "', order_status_id = '" . (int)$order_status_id . "', notify = '" . (int)$notify . "', comment = '" . $this->db->escape($comment) . "', date_added = NOW()");
        
            }
            public function changeShipped($order_id) {
            $this->db->query("UPDATE `" . DB_PREFIX . "order` SET order_status_id = '3',pdf_status = '2' WHERE order_id = '" . (int)$order_id . "'");
            }

                 ]]></add>
        </operation>
       </file>
       <file name="admin/view/template/sale/order_shipping.tpl">
        <operation>
            <search position="after"><![CDATA[<div class="container">]]></search>
            <add><![CDATA[
               <div class="success_ship"></div>
               ]]></add>
        </operation>
         <operation>
            <search position="after" offset="4"><![CDATA[<td><?php echo $order['comment']; ?></td>]]></search>
            <add><![CDATA[
               <button class="btn btn-primary" id="shiippment">Submit Shippment</button>
                <script>
                  $('#shiippment').on("click",function(){          
                        $.ajax
                          ({ 
                              url: 'index.php?route=sale/order/gpdf&token=<?php echo $token; ?>&order_id=<?php echo $order_id_shipp; ?>',
                              success: function()
                              {
                                  $('.success_ship').html('<div class="alert alert-success" role="alert">You Have Succesfully Added this order to Shippment.  </div>');

                                  setTimeout(
                                      function(){
                                          window.location = 'index.php?route=sale/order/info&token=<?php echo $token; ?>&order_id=<?php echo $order_id_shipp; ?>' 
                                      },
                                  3000);
                              
                              }
                          });
                  });
                </script>
               ]]></add>
        </operation>
       </file>
       <file name="admin/view/template/sale/order_info.tpl">
        <operation>
            <search position="replace"><![CDATA[
            <div class="pull-right"><a href="<?php echo $invoice; ?>" target="_blank" data-toggle="tooltip" title="<?php echo $button_invoice_print; ?>" class="btn btn-info"><i class="fa fa-print"></i></a> <a href="<?php echo $shipping; ?>" target="_blank" data-toggle="tooltip" title="<?php echo $button_shipping_print; ?>" class="btn btn-info"><i class="fa fa-truck"></i></a> <a href="<?php echo $edit; ?>" data-toggle="tooltip" title="<?php echo $button_edit; ?>" class="btn btn-primary"><i class="fa fa-pencil"></i></a> <a href="<?php echo $cancel; ?>" data-toggle="tooltip" title="<?php echo $button_cancel; ?>" class="btn btn-default"><i class="fa fa-reply"></i></a></div>
                ]]></search>
            <add><![CDATA[
            <div class="pull-right">
                <a href="<?php echo $invoice; ?>" target="_blank" data-toggle="tooltip" title="<?php echo $button_invoice_print; ?>" class="btn btn-info"><i class="fa fa-print"></i></a> 
                <a href="<?php echo $shipping; ?>" target="_blank" data-toggle="tooltip" title="<?php echo $button_shipping_print; ?>" class="btn btn-info"><i class="fa fa-truck"></i></a> 
                <a href="<?php echo $edit; ?>" data-toggle="tooltip" title="<?php echo $button_edit; ?>" class="btn btn-primary"><i class="fa fa-pencil"></i></a>
                <a href="<?php echo $cancel; ?>" data-toggle="tooltip" title="<?php echo $button_cancel; ?>" class="btn btn-default"><i class="fa fa-reply"></i></a>
            </div>
               ]]></add>
        </operation>
        <operation>
            <search position="replace"><![CDATA[<a href="<?php echo $shipping; ?>" target="_blank" data-toggle="tooltip" title="<?php echo $button_shipping_print; ?>" class="btn btn-info"><i class="fa fa-truck"></i></a>]]></search>
            <add><![CDATA[
            <?php if($order_status_id == '3') { ?>
            <a data-toggle="modal" data-target="#myModal" class="btn btn-primary"><i class="fa fa-truck"></i></a>
            <?php } else { ?>
            <a href="<?php echo $shipping; ?>" target="_blank" data-toggle="tooltip" title="<?php echo $button_shipping_print; ?>" class="btn btn-info"><i class="fa fa-truck"></i></a>
            <?php } ?>
               ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[<?php echo $footer; ?>]]></search>
            <add><![CDATA[
                <div id="myModal" class="modal fade" role="dialog">
                  <div class="modal-dialog">
                    <div class="modal-content">
                      <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                      </div>
                      <div class="modal-body">
                       <p class="text-center" style="font-weight: 800;color:green; background: bisque;">You have Aleready Shipped this Order!</p>
                      </div>
                    </div>
                  </div>
                </div>
               ]]></add>
        </operation>
       </file>
       <file name="admin/controller/common/menu.php">
        <operation>
            <search position="after"><![CDATA[$data['order'] = $this->url->link('sale/order', 'token=' . $this->session->data['token'], 'SSL');]]></search>
            <add><![CDATA[
            $data['shipped_orders'] = $this->url->link('sale/order/getShippedOrders', 'token=' . $this->session->data['token'], 'SSL');
               ]]></add>
        </operation>
       </file>
       <file name="admin/view/template/common/menu.tpl">
        <operation>
            <search position="after"><![CDATA[<li><a href="<?php echo $order; ?>"><?php echo $text_order; ?></a></li>]]></search>
            <add><![CDATA[
            <li><a href="<?php echo $shipped_orders; ?>">Shipped Orders</a></li>
               ]]></add>
        </operation>
       </file>
</modification> 